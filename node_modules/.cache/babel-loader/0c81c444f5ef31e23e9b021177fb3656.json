{"ast":null,"code":"var _jsxFileName = \"/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx\";\nimport TermsList from \"./TermsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MatchesContainer(_ref) {\n  let {\n    query\n  } = _ref;\n  const searchKeyboardEvents = e => {\n    // const resultsArray = getTermsHtmlArray(e, dictionary);\n    // const searchInputGhost =\n    //     const matchesContainer = document.querySelector('[data-matches-container]');\n    //     if(matchesContainer){\n    //         matchesContainer.innerHTML = getTermsHtmlArray(e, dictionary).join('');\n    //         if (matchesContainer.classList.contains('hidden') && !isSubmit) {\n    //             matchesContainer.classList.remove('hidden');\n    //         }\n    //     }\n    const target = e.currentTarget;\n    if (target) {\n      const value = target.value;\n      // Ghosting\n      // const matchBeginningRegex = new RegExp(`^${value}`, 'g')\n      // if (e.code !== 'ENTER') {\n      //     if (matchesContainer && matchesContainer.firstElementChild && matchesContainer.firstElementChild.dataset.key) {\n      //         if (matchesContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n      //             searchInputGhost.value = matchesContainer.firstElementChild.dataset.key;\n      //         } else {\n      //             searchInputGhost.value = '';\n      //         }\n      //     } else {\n      //         if(searchInputGhost) searchInputGhost.value = '';\n      //     }\n      // }\n      // if (value === '' || (matchesContainer && matchesContainer.children.length === 0)) {\n      //     matchesContainer.classList.add('hidden');\n      //     count = 0;\n      //     if(searchInputGhost) searchInputGhost.value = '';\n      // }\n      // // reset when text is inserted.\n      // if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n      //     count = 0;\n      // }\n      // // left arrow\n      // if (e.keyCode === 39) {\n      //     if(searchInputGhost && matchesContainer){\n      //         searchInputGhost.value = matchesContainer.firstElementChild.dataset.key;\n      //         e.currentTarget.value = matchesContainer.firstElementChild.dataset.key;\n      //     }\n      // }\n      // // up arrow\n      // if (e.keyCode === 38) {\n      //     if (count >= 0) {\n      //         count = (count === 0) ? count = 0 : count - 1;\n      //         if (matchesContainer && matchesContainer.children[count]) {\n      //             searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n      //             searchResultsContainer.children[count].classList.add('text-gray-900');\n      //         }\n      //     }\n      // }\n      // // down arrow\n      // if (e.keyCode === 40) {\n      //     const listMaxLength = matchesContainer && matchesContainer.children.length - 1\n      //     if (count <= listMaxLength) {\n      //         if (!isInitialValue) {\n      //             count = (count === listMaxLength) ? listMaxLength : count + 1\n      //         }\n      //         if (matchesContainer && matchesContainer.children[count]) {\n      //             searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n      //             searchResultsContainer.children[count].classList.add('text-gray-900');\n      //             isInitialValue = false;\n      //         }\n      //     }\n      // }\n      // //esc\n      // if (e.keyCode === 27) {\n      //     matchesContainer && matchesContainer.classList.add('hidden');\n      // }\n    }\n\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    \"data-matches-container\": true,\n    className: \"border-slate-700 border-2\",\n    children: /*#__PURE__*/_jsxDEV(TermsList, {\n      query: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 12\n  }, this);\n}\n_c = MatchesContainer;\nvar _c;\n$RefreshReg$(_c, \"MatchesContainer\");","map":{"version":3,"names":["TermsList","MatchesContainer","query","searchKeyboardEvents","e","target","currentTarget","value"],"sources":["/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx"],"sourcesContent":["import {useState} from \"react\";\nimport dictionary from \"../dictionary.json\";\nimport TermsList from \"./TermsList\";\n\ninterface Props{\n    query: string;\n}\n\nexport default function MatchesContainer({query}:Props){\n\n\n\n    const searchKeyboardEvents = (e:React.KeyboardEvent<HTMLInputElement>):[]=> {\n        // const resultsArray = getTermsHtmlArray(e, dictionary);\n        // const searchInputGhost =\n        //     const matchesContainer = document.querySelector('[data-matches-container]');\n        //     if(matchesContainer){\n        //         matchesContainer.innerHTML = getTermsHtmlArray(e, dictionary).join('');\n        //         if (matchesContainer.classList.contains('hidden') && !isSubmit) {\n        //             matchesContainer.classList.remove('hidden');\n        //         }\n        //     }\n        const target = e.currentTarget;\n        if(target){\n            const value = target.value;\n            // Ghosting\n            // const matchBeginningRegex = new RegExp(`^${value}`, 'g')\n            // if (e.code !== 'ENTER') {\n            //     if (matchesContainer && matchesContainer.firstElementChild && matchesContainer.firstElementChild.dataset.key) {\n            //         if (matchesContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n            //             searchInputGhost.value = matchesContainer.firstElementChild.dataset.key;\n            //         } else {\n            //             searchInputGhost.value = '';\n            //         }\n            //     } else {\n            //         if(searchInputGhost) searchInputGhost.value = '';\n            //     }\n            // }\n            // if (value === '' || (matchesContainer && matchesContainer.children.length === 0)) {\n            //     matchesContainer.classList.add('hidden');\n            //     count = 0;\n            //     if(searchInputGhost) searchInputGhost.value = '';\n            // }\n            // // reset when text is inserted.\n            // if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n            //     count = 0;\n            // }\n            // // left arrow\n            // if (e.keyCode === 39) {\n            //     if(searchInputGhost && matchesContainer){\n            //         searchInputGhost.value = matchesContainer.firstElementChild.dataset.key;\n            //         e.currentTarget.value = matchesContainer.firstElementChild.dataset.key;\n            //     }\n            // }\n            // // up arrow\n            // if (e.keyCode === 38) {\n            //     if (count >= 0) {\n            //         count = (count === 0) ? count = 0 : count - 1;\n            //         if (matchesContainer && matchesContainer.children[count]) {\n            //             searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n            //             searchResultsContainer.children[count].classList.add('text-gray-900');\n            //         }\n            //     }\n            // }\n            // // down arrow\n            // if (e.keyCode === 40) {\n            //     const listMaxLength = matchesContainer && matchesContainer.children.length - 1\n            //     if (count <= listMaxLength) {\n            //         if (!isInitialValue) {\n            //             count = (count === listMaxLength) ? listMaxLength : count + 1\n            //         }\n            //         if (matchesContainer && matchesContainer.children[count]) {\n            //             searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n            //             searchResultsContainer.children[count].classList.add('text-gray-900');\n            //             isInitialValue = false;\n            //         }\n            //     }\n            // }\n            // //esc\n            // if (e.keyCode === 27) {\n            //     matchesContainer && matchesContainer.classList.add('hidden');\n            // }\n        }\n        return [];\n    }\n\n\n    return <ul data-matches-container className=\"border-slate-700 border-2\">\n        <TermsList query={query} />\n    </ul>;\n}\n"],"mappings":";AAEA,OAAOA,SAAS,MAAM,aAAa;AAAC;AAMpC,eAAe,SAASC,gBAAgB,OAAe;EAAA,IAAd;IAACC;EAAW,CAAC;EAIlD,MAAMC,oBAAoB,GAAIC,CAAuC,IAAO;IACxE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,MAAM,GAAGD,CAAC,CAACE,aAAa;IAC9B,IAAGD,MAAM,EAAC;MACN,MAAME,KAAK,GAAGF,MAAM,CAACE,KAAK;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;;IACA,OAAO,EAAE;EACb,CAAC;EAGD,oBAAO;IAAI,8BAAsB;IAAC,SAAS,EAAC,2BAA2B;IAAA,uBACnE,QAAC,SAAS;MAAC,KAAK,EAAEL;IAAM;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC1B;AACT;AAAC,KAlFuBD,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}