{"ast":null,"code":"var _jsxFileName = \"/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/Input.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  const findMatches = (query, dictionary) => {\n    const regex = new RegExp(query, 'gi');\n    const namesArray = [];\n    if (dictionary.length > 0) {\n      dictionary.forEach(obj => {\n        for (let [key, value] of Object.entries(obj)) {\n          namesArray.push(...value);\n        }\n      });\n    }\n    return namesArray.filter(val => val.name.match(regex));\n  };\n  const getLexicNamesHtmlArray = e => {\n    const matchArray = findMatches(e.currentTarget.value, lexiconNames);\n    const html = matchArray.map((lexic, index) => {\n      const regex = new RegExp(e.currentTarget.value, 'gi');\n      const lexicName = lexic.name.replace(regex, `<span class=\"bg-lexicblue-100 text-gray-900\">${e.currentTarget.value}</span>`);\n      return `<li id=\"${index}\" class=\"text-sm break-words text-gray-200 cursor-pointer hover:text-gray-900 hover:bg-lexicblue-300 p-1\" data-key=\"${lexic.name}\">${lexicName}</li>`;\n    });\n    return html;\n  };\n  const searchKeyboardEvents = e => {\n    if (e.type === 'keyup') {\n      if (searchResultsContainer) {\n        searchResultsContainer.innerHTML = getLexicNamesHtmlArray(e).join('');\n        if (searchResultsContainer.classList.contains('hidden') && !isSubmit) {\n          searchResultsContainer.classList.remove('hidden');\n        }\n      }\n      resultsArray = getLexicNamesHtmlArray(e);\n\n      // Ghosting\n      const matchBeginningRegex = new RegExp(`^${e.currentTarget.value}`, 'g');\n      if (e.keyCode !== 13) {\n        if (searchResultsContainer && searchResultsContainer.firstElementChild && searchResultsContainer.firstElementChild.dataset.key) {\n          if (searchResultsContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n            searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n          } else {\n            searchInputGhost.value = '';\n          }\n        } else {\n          if (searchInputGhost) searchInputGhost.value = '';\n        }\n      }\n      if (e.currentTarget.value === '' || searchResultsContainer && searchResultsContainer.children.length === 0) {\n        searchResultsContainer.classList.add('hidden');\n        count = 0;\n        if (searchInputGhost) searchInputGhost.value = '';\n      }\n      // reset when text is inserted.\n      if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n        count = 0;\n      }\n      // left arrow\n      if (e.keyCode === 39) {\n        if (searchInputGhost && searchResultsContainer) {\n          searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n          e.currentTarget.value = searchResultsContainer.firstElementChild.dataset.key;\n        }\n      }\n\n      // up arrow\n      if (e.keyCode === 38) {\n        if (count >= 0) {\n          count = count === 0 ? count = 0 : count - 1;\n          if (searchResultsContainer && searchResultsContainer.children[count]) {\n            searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n            searchResultsContainer.children[count].classList.add('text-gray-900');\n          }\n        }\n      }\n\n      // down arrow\n      if (e.keyCode === 40) {\n        const listMaxLength = searchResultsContainer && searchResultsContainer.children.length - 1;\n        if (count <= listMaxLength) {\n          if (!isInitialValue) {\n            count = count === listMaxLength ? listMaxLength : count + 1;\n          }\n          if (searchResultsContainer && searchResultsContainer.children[count]) {\n            searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n            searchResultsContainer.children[count].classList.add('text-gray-900');\n            isInitialValue = false;\n          }\n        }\n      }\n\n      //esc\n      if (e.keyCode === 27) {\n        searchResultsContainer && searchResultsContainer.classList.add('hidden');\n      }\n    }\n    if (e.type === 'submit') {\n      isSubmit = true;\n      searchResultsContainer.innerHTML = resultsArray.join('');\n      if (searchInput && searchInputGhost && searchResultsContainer && searchResultsContainer.children.length > 0) {\n        searchInputGhost.value = searchResultsContainer.children[count].dataset.key;\n        searchInputGhost.style.color = 'transparent';\n        searchInput.value = searchResultsContainer.children[count].dataset.key;\n      }\n      if (searchInputGhost && searchResultsContainer && searchResultsContainer.length === 1) {\n        searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n      }\n      if (searchResultsContainer && searchResultsContainer.children.length === 0) {\n        e.preventDefault();\n      }\n      searchResultsContainer && searchResultsContainer.classList.add('hidden');\n    }\n  };\n  const searchMouseEvents = e => {\n    if (e.type === 'click') {\n      if (e.target.tagName === 'LI' && searchInputGhost) {\n        searchInputGhost.value = e.target.dataset.key;\n        searchForm && searchForm.submit();\n      }\n    }\n  };\n  const displayMatches = e => {\n    searchKeyboardEvents(e);\n    searchMouseEvents(e);\n  };\n  const searchEvents = () => {\n    searchInput && searchInput.addEventListener('keyup', displayMatches);\n    searchResultsContainer && searchResultsContainer.addEventListener('click', displayMatches);\n    searchResultsContainer && searchResultsContainer.addEventListener('mouseover', displayMatches);\n    searchForm && searchForm.addEventListener('submit', displayMatches);\n    window.addEventListener('click', e => {\n      if (e.target.closest !== searchForm && searchResultsContainer) {\n        searchResultsContainer.classList.add('hidden');\n      }\n    });\n    window.addEventListener('keydown', e => {\n      if (e.key === 'f' && e.ctrlKey && e.metaKey) {\n        searchInput.focus();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"price\",\n      className: \"block text-sm font-medium text-slate-400\",\n      children: \"Abbreviations list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mt-1 rounded-md shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        id: \"price\",\n        className: \"block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",\n        placeholder: \"Start typing and abbreviation..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-y-0 right-0 flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          className: \"sr-only\",\n          children: \"Abbreviation Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Input","findMatches","query","dictionary","regex","RegExp","namesArray","length","forEach","obj","key","value","Object","entries","push","filter","val","name","match","getLexicNamesHtmlArray","e","matchArray","currentTarget","lexiconNames","html","map","lexic","index","lexicName","replace","searchKeyboardEvents","type","searchResultsContainer","innerHTML","join","classList","contains","isSubmit","remove","resultsArray","matchBeginningRegex","keyCode","firstElementChild","dataset","searchInputGhost","children","add","count","listMaxLength","isInitialValue","searchInput","style","color","preventDefault","searchMouseEvents","target","tagName","searchForm","submit","displayMatches","searchEvents","addEventListener","window","closest","ctrlKey","metaKey","focus"],"sources":["/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/Input.tsx"],"sourcesContent":["import dictionary from '../dictionary.json';\n\nexport default function Input() {\n\n    const findMatches = (query, dictionary) => {\n        const regex = new RegExp(query, 'gi');\n        const namesArray = [];\n        if(dictionary.length > 0){\n            dictionary.forEach(obj => {\n                for (let [key, value] of Object.entries(obj)) {\n                    namesArray.push(...value);\n                }\n            })\n        }\n        return namesArray.filter(val => val.name.match(regex))\n    }\n    const getLexicNamesHtmlArray = (e) => {\n        const matchArray = findMatches(e.currentTarget.value, lexiconNames);\n        const html = matchArray.map((lexic, index) => {\n            const regex = new RegExp(e.currentTarget.value, 'gi');\n            const lexicName = lexic.name.replace(regex, `<span class=\"bg-lexicblue-100 text-gray-900\">${e.currentTarget.value}</span>`)\n            return `<li id=\"${index}\" class=\"text-sm break-words text-gray-200 cursor-pointer hover:text-gray-900 hover:bg-lexicblue-300 p-1\" data-key=\"${lexic.name}\">${lexicName}</li>`\n        })\n        return html;\n    }\n    const searchKeyboardEvents = (e) => {\n\n        if (e.type === 'keyup') {\n            if(searchResultsContainer){\n                searchResultsContainer.innerHTML = getLexicNamesHtmlArray(e).join('');\n                if (searchResultsContainer.classList.contains('hidden') && !isSubmit) {\n                    searchResultsContainer.classList.remove('hidden');\n                }\n            }\n            resultsArray = getLexicNamesHtmlArray(e);\n\n            // Ghosting\n            const matchBeginningRegex = new RegExp(`^${e.currentTarget.value}`, 'g')\n            if (e.keyCode !== 13) {\n                if (searchResultsContainer && searchResultsContainer.firstElementChild && searchResultsContainer.firstElementChild.dataset.key) {\n                    if (searchResultsContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n                        searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n                    } else {\n                        searchInputGhost.value = '';\n                    }\n                } else {\n                    if(searchInputGhost) searchInputGhost.value = '';\n                }\n            }\n            if (e.currentTarget.value === '' || (searchResultsContainer && searchResultsContainer.children.length === 0)) {\n                searchResultsContainer.classList.add('hidden');\n                count = 0;\n                if(searchInputGhost) searchInputGhost.value = '';\n            }\n            // reset when text is inserted.\n            if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n                count = 0;\n            }\n            // left arrow\n            if (e.keyCode === 39) {\n                if(searchInputGhost && searchResultsContainer){\n                    searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n                    e.currentTarget.value = searchResultsContainer.firstElementChild.dataset.key;\n                }\n            }\n\n            // up arrow\n            if (e.keyCode === 38) {\n                if (count >= 0) {\n                    count = (count === 0) ? count = 0 : count - 1;\n                    if (searchResultsContainer && searchResultsContainer.children[count]) {\n                        searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n                        searchResultsContainer.children[count].classList.add('text-gray-900');\n                    }\n                }\n            }\n\n            // down arrow\n            if (e.keyCode === 40) {\n                const listMaxLength = searchResultsContainer && searchResultsContainer.children.length - 1\n                if (count <= listMaxLength) {\n                    if (!isInitialValue) {\n                        count = (count === listMaxLength) ? listMaxLength : count + 1\n                    }\n                    if (searchResultsContainer && searchResultsContainer.children[count]) {\n                        searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n                        searchResultsContainer.children[count].classList.add('text-gray-900');\n                        isInitialValue = false;\n                    }\n                }\n            }\n\n            //esc\n            if (e.keyCode === 27) {\n                searchResultsContainer && searchResultsContainer.classList.add('hidden');\n            }\n        }\n        if (e.type === 'submit') {\n            isSubmit = true;\n            searchResultsContainer.innerHTML = resultsArray.join('');\n            if (searchInput && searchInputGhost && searchResultsContainer && searchResultsContainer.children.length > 0) {\n                searchInputGhost.value = searchResultsContainer.children[count].dataset.key\n                searchInputGhost.style.color= 'transparent'\n                searchInput.value = searchResultsContainer.children[count].dataset.key\n            }\n\n            if (searchInputGhost && searchResultsContainer && searchResultsContainer.length === 1) {\n                searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n            }\n\n            if (searchResultsContainer && searchResultsContainer.children.length === 0) {\n                e.preventDefault();\n            }\n\n            searchResultsContainer && searchResultsContainer.classList.add('hidden');\n        }\n    }\n    const searchMouseEvents = (e) => {\n        if (e.type === 'click') {\n            if (e.target.tagName === 'LI' && searchInputGhost) {\n                searchInputGhost.value = e.target.dataset.key;\n                searchForm && searchForm.submit();\n            }\n        }\n    }\n    const displayMatches = (e) => {\n        searchKeyboardEvents(e)\n        searchMouseEvents(e);\n    }\n    const searchEvents = () => {\n        searchInput && searchInput.addEventListener('keyup', displayMatches)\n        searchResultsContainer && searchResultsContainer.addEventListener('click', displayMatches)\n        searchResultsContainer && searchResultsContainer.addEventListener('mouseover', displayMatches);\n        searchForm && searchForm.addEventListener('submit', displayMatches)\n        window.addEventListener('click', (e) => {\n            if (e.target.closest !== searchForm && searchResultsContainer) {\n                searchResultsContainer.classList.add('hidden');\n            }\n        })\n        window.addEventListener('keydown', (e) => {\n\n            if (e.key === 'f' && e.ctrlKey && e.metaKey) {\n                searchInput.focus();\n            }\n        })\n    }\n\n\n\n\n\n\n    return (\n        <div>\n            <label htmlFor=\"price\" className=\"block text-sm font-medium text-slate-400\">\n                Abbreviations list\n            </label>\n            <div className=\"relative mt-1 rounded-md shadow-sm\">\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    id=\"price\"\n                    className=\"block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"Start typing and abbreviation..\"\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\n                    <label htmlFor=\"currency\" className=\"sr-only\">\n                        Abbreviation Dictionary\n                    </label>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}