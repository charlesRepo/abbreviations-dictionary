{"ast":null,"code":"var _jsxFileName = \"/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx\",\n  _s = $RefreshSig$();\nimport dictionary from \"../dictionary.json\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MatchesContainer(_ref) {\n  _s();\n  let {\n    query,\n    count,\n    setCount\n  } = _ref;\n  const findMatches = query => {\n    const regex = new RegExp(query, 'gi');\n    const termsArray = [];\n    [dictionary].forEach(obj => {\n      for (let [term, def] of Object.entries(obj)) {\n        termsArray.push(term);\n      }\n    });\n    return termsArray.filter(val => val.match(regex));\n  };\n  useEffect(() => {\n    const maxCount = count <= arr.length - 1 ? count : setCount(arr.length - 1);\n    const minCount = count >= 0 ? count : setCount(0);\n  });\n  const resetCount = (arr, index) => {\n    const maxCount = count <= arr.length - 1 ? count : setCount(arr.length - 1);\n    const minCount = count >= 0 ? count : setCount(0);\n    return maxCount === index || minCount === index ? 'bg-slate-400 text-slate-900' : '';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: query && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"border-slate-600 border-2 rounded\",\n      children: findMatches(query).map((term, index, array) => {\n        const regex = new RegExp(query, 'gi');\n        const itemValue = term.replace(regex, query);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${resetCount(array, index)} text-sm break-words text-slate-500 cursor-pointer hover:text-slate-200 hover:bg-slate-600 p-1`,\n          \"data-key\": \"${term}\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: itemValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this)\n  }, void 0, false);\n}\n_s(MatchesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MatchesContainer;\nvar _c;\n$RefreshReg$(_c, \"MatchesContainer\");","map":{"version":3,"names":["dictionary","useEffect","MatchesContainer","query","count","setCount","findMatches","regex","RegExp","termsArray","forEach","obj","term","def","Object","entries","push","filter","val","match","maxCount","arr","length","minCount","resetCount","index","map","array","itemValue","replace"],"sources":["/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx"],"sourcesContent":["\nimport dictionary from \"../dictionary.json\";\nimport {useEffect} from \"react\";\n\ninterface Props{\n    query: string;\n    count: number;\n    setCount:(index: number) => void\n}\n\nexport default function MatchesContainer({query, count, setCount}:Props){\n    const findMatches = (query:string) => {\n        const regex = new RegExp(query, 'gi');\n        const termsArray:string[] = [];\n        [dictionary].forEach(obj => {\n            for (let [term, def] of Object.entries(obj)) {\n                termsArray.push(term);\n            }\n        })\n        return termsArray.filter((val:string) => val.match(regex))\n    }\n\n    useEffect(() => {\n        const maxCount = count <= arr.length -1 ? count : setCount(arr.length -1);\n        const minCount = count >= 0 ? count : setCount(0);\n    });\n    const resetCount = (arr: string[], index:number):string => {\n        const maxCount = count <= arr.length -1 ? count : setCount(arr.length -1);\n        const minCount = count >= 0 ? count : setCount(0);\n        return maxCount === index || minCount === index ? 'bg-slate-400 text-slate-900':''\n    }\n\n    return (\n        <>\n            {query && (<ul className=\"border-slate-600 border-2 rounded\" >\n                {findMatches(query).map((term, index, array) => {\n                    const regex = new RegExp(query, 'gi');\n                    const itemValue =  term.replace(regex, query);\n\n\n\n                    return (\n                        <li key={index}\n                            className={`${resetCount(array, index)} text-sm break-words text-slate-500 cursor-pointer hover:text-slate-200 hover:bg-slate-600 p-1`}\n                            data-key=\"${term}\">\n                            <span>{itemValue}</span>\n                        </li>\n                    )\n                })}\n            </ul>)}\n        </>)\n\n}\n"],"mappings":";;AACA,OAAOA,UAAU,MAAM,oBAAoB;AAC3C,SAAQC,SAAS,QAAO,OAAO;AAAC;AAAA;AAQhC,eAAe,SAASC,gBAAgB,OAAgC;EAAA;EAAA,IAA/B;IAACC,KAAK;IAAEC,KAAK;IAAEC;EAAc,CAAC;EACnE,MAAMC,WAAW,GAAIH,KAAY,IAAK;IAClC,MAAMI,KAAK,GAAG,IAAIC,MAAM,CAACL,KAAK,EAAE,IAAI,CAAC;IACrC,MAAMM,UAAmB,GAAG,EAAE;IAC9B,CAACT,UAAU,CAAC,CAACU,OAAO,CAACC,GAAG,IAAI;MACxB,KAAK,IAAI,CAACC,IAAI,EAAEC,GAAG,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;QACzCF,UAAU,CAACO,IAAI,CAACJ,IAAI,CAAC;MACzB;IACJ,CAAC,CAAC;IACF,OAAOH,UAAU,CAACQ,MAAM,CAAEC,GAAU,IAAKA,GAAG,CAACC,KAAK,CAACZ,KAAK,CAAC,CAAC;EAC9D,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAGhB,KAAK,IAAIiB,GAAG,CAACC,MAAM,GAAE,CAAC,GAAGlB,KAAK,GAAGC,QAAQ,CAACgB,GAAG,CAACC,MAAM,GAAE,CAAC,CAAC;IACzE,MAAMC,QAAQ,GAAGnB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAGC,QAAQ,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;EACF,MAAMmB,UAAU,GAAG,CAACH,GAAa,EAAEI,KAAY,KAAY;IACvD,MAAML,QAAQ,GAAGhB,KAAK,IAAIiB,GAAG,CAACC,MAAM,GAAE,CAAC,GAAGlB,KAAK,GAAGC,QAAQ,CAACgB,GAAG,CAACC,MAAM,GAAE,CAAC,CAAC;IACzE,MAAMC,QAAQ,GAAGnB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAGC,QAAQ,CAAC,CAAC,CAAC;IACjD,OAAOe,QAAQ,KAAKK,KAAK,IAAIF,QAAQ,KAAKE,KAAK,GAAG,6BAA6B,GAAC,EAAE;EACtF,CAAC;EAED,oBACI;IAAA,UACKtB,KAAK,iBAAK;MAAI,SAAS,EAAC,mCAAmC;MAAA,UACvDG,WAAW,CAACH,KAAK,CAAC,CAACuB,GAAG,CAAC,CAACd,IAAI,EAAEa,KAAK,EAAEE,KAAK,KAAK;QAC5C,MAAMpB,KAAK,GAAG,IAAIC,MAAM,CAACL,KAAK,EAAE,IAAI,CAAC;QACrC,MAAMyB,SAAS,GAAIhB,IAAI,CAACiB,OAAO,CAACtB,KAAK,EAAEJ,KAAK,CAAC;QAI7C,oBACI;UACI,SAAS,EAAG,GAAEqB,UAAU,CAACG,KAAK,EAAEF,KAAK,CAAE,gGAAgG;UACvI,YAAS,SAAS;UAAA,uBAClB;YAAA,UAAOG;UAAS;YAAA;YAAA;YAAA;UAAA;QAAQ,GAHnBH,KAAK;UAAA;UAAA;UAAA;QAAA,QAIT;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACA,iBACP;AAEX;AAAC,GA1CuBvB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}