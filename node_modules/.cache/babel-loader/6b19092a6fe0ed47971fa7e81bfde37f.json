{"ast":null,"code":"var _jsxFileName = \"/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/Input.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  const findMatches = (query, dictionary) => {\n    const regex = new RegExp(query, 'gi');\n    const termsArray = [];\n    [dictionary].forEach(obj => {\n      for (let [term, def] of Object.entries(obj)) {\n        termsArray.push(term);\n      }\n    });\n    return termsArray.filter(val => val.match(regex));\n  };\n  const getTermsHtmlArray = (e, dictionary) => {\n    const el = e.currentTarget;\n    if (el) {\n      const matchArray = findMatches(el.value, dictionary);\n      return matchArray.map((term, index) => {\n        const regex = new RegExp(el.value, 'gi');\n        const termHTML = term.replace(regex, `<span class=\"bg-lexicblue-100 text-gray-900\">${el.value}</span>`);\n        return `<li id=\"${index}\" class=\"text-sm break-words text-gray-200 cursor-pointer hover:text-gray-900 hover:bg-lexicblue-300 p-1\" data-key=\"${term}\">${termHTML}</li>`;\n      });\n    }\n    return [];\n  };\n\n  // const searchKeyboardEvents = (e) => {\n  //     if (e.type === 'keyup') {\n  //         if(searchResultsContainer){\n  //             searchResultsContainer.innerHTML = getTermsHtmlArray(e).join('');\n  //             if (searchResultsContainer.classList.contains('hidden') && !isSubmit) {\n  //                 searchResultsContainer.classList.remove('hidden');\n  //             }\n  //         }\n  //         resultsArray = getTermsHtmlArray(e);\n  //\n  //         // Ghosting\n  //         const matchBeginningRegex = new RegExp(`^${e.currentTarget.value}`, 'g')\n  //         if (e.keyCode !== 13) {\n  //             if (searchResultsContainer && searchResultsContainer.firstElementChild && searchResultsContainer.firstElementChild.dataset.key) {\n  //                 if (searchResultsContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n  //                     searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n  //                 } else {\n  //                     searchInputGhost.value = '';\n  //                 }\n  //             } else {\n  //                 if(searchInputGhost) searchInputGhost.value = '';\n  //             }\n  //         }\n  //         if (e.currentTarget.value === '' || (searchResultsContainer && searchResultsContainer.children.length === 0)) {\n  //             searchResultsContainer.classList.add('hidden');\n  //             count = 0;\n  //             if(searchInputGhost) searchInputGhost.value = '';\n  //         }\n  //         // reset when text is inserted.\n  //         if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n  //             count = 0;\n  //         }\n  //         // left arrow\n  //         if (e.keyCode === 39) {\n  //             if(searchInputGhost && searchResultsContainer){\n  //                 searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n  //                 e.currentTarget.value = searchResultsContainer.firstElementChild.dataset.key;\n  //             }\n  //         }\n  //\n  //         // up arrow\n  //         if (e.keyCode === 38) {\n  //             if (count >= 0) {\n  //                 count = (count === 0) ? count = 0 : count - 1;\n  //                 if (searchResultsContainer && searchResultsContainer.children[count]) {\n  //                     searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n  //                     searchResultsContainer.children[count].classList.add('text-gray-900');\n  //                 }\n  //             }\n  //         }\n  //\n  //         // down arrow\n  //         if (e.keyCode === 40) {\n  //             const listMaxLength = searchResultsContainer && searchResultsContainer.children.length - 1\n  //             if (count <= listMaxLength) {\n  //                 if (!isInitialValue) {\n  //                     count = (count === listMaxLength) ? listMaxLength : count + 1\n  //                 }\n  //                 if (searchResultsContainer && searchResultsContainer.children[count]) {\n  //                     searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n  //                     searchResultsContainer.children[count].classList.add('text-gray-900');\n  //                     isInitialValue = false;\n  //                 }\n  //             }\n  //         }\n  //\n  //         //esc\n  //         if (e.keyCode === 27) {\n  //             searchResultsContainer && searchResultsContainer.classList.add('hidden');\n  //         }\n  //     }\n  //     if (e.type === 'submit') {\n  //         isSubmit = true;\n  //         searchResultsContainer.innerHTML = resultsArray.join('');\n  //         if (searchInput && searchInputGhost && searchResultsContainer && searchResultsContainer.children.length > 0) {\n  //             searchInputGhost.value = searchResultsContainer.children[count].dataset.key\n  //             searchInputGhost.style.color= 'transparent'\n  //             searchInput.value = searchResultsContainer.children[count].dataset.key\n  //         }\n  //\n  //         if (searchInputGhost && searchResultsContainer && searchResultsContainer.length === 1) {\n  //             searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n  //         }\n  //\n  //         if (searchResultsContainer && searchResultsContainer.children.length === 0) {\n  //             e.preventDefault();\n  //         }\n  //\n  //         searchResultsContainer && searchResultsContainer.classList.add('hidden');\n  //     }\n  // }\n  // const searchMouseEvents = (e) => {\n  //     if (e.type === 'click') {\n  //         if (e.target.tagName === 'LI' && searchInputGhost) {\n  //             searchInputGhost.value = e.target.dataset.key;\n  //             searchForm && searchForm.submit();\n  //         }\n  //     }\n  // }\n  // const displayMatches = (e) => {\n  //     searchKeyboardEvents(e)\n  //     searchMouseEvents(e);\n  // }\n  // const searchEvents = () => {\n  //     searchInput && searchInput.addEventListener('keyup', displayMatches)\n  //     searchResultsContainer && searchResultsContainer.addEventListener('click', displayMatches)\n  //     searchResultsContainer && searchResultsContainer.addEventListener('mouseover', displayMatches);\n  //     searchForm && searchForm.addEventListener('submit', displayMatches)\n  //     window.addEventListener('click', (e) => {\n  //         if (e.target.closest !== searchForm && searchResultsContainer) {\n  //             searchResultsContainer.classList.add('hidden');\n  //         }\n  //     })\n  //     window.addEventListener('keydown', (e) => {\n  //\n  //         if (e.key === 'f' && e.ctrlKey && e.metaKey) {\n  //             searchInput.focus();\n  //         }\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"price\",\n      className: \"block text-sm font-medium text-slate-400\",\n      children: \"Abbreviations list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mt-1 rounded-md shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        id: \"price\",\n        className: \"block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",\n        placeholder: \"Start typing and abbreviation..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-y-0 right-0 flex items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          className: \"sr-only\",\n          children: \"Abbreviation Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Input","findMatches","query","dictionary","regex","RegExp","termsArray","forEach","obj","term","def","Object","entries","push","filter","val","match","getTermsHtmlArray","e","el","currentTarget","matchArray","value","map","index","termHTML","replace"],"sources":["/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/Input.tsx"],"sourcesContent":["import dictionary from '../dictionary.json';\n\nexport default function Input() {\n\n\n\n    const findMatches = (query:string, dictionary:{}) => {\n        const regex = new RegExp(query, 'gi');\n        const termsArray:string[] = [];\n            [dictionary].forEach(obj => {\n                for (let [term, def] of Object.entries(obj)) {\n                    termsArray.push(term);\n                }\n            })\n        return termsArray.filter((val:string) => val.match(regex))\n    }\n\n    const getTermsHtmlArray = (e:KeyboardEvent, dictionary:[]) => {\n        const el:EventTarget|null = e.currentTarget;\n        if(el){\n            const matchArray = findMatches(el.value, dictionary);\n            return matchArray.map((term, index) => {\n                const regex = new RegExp(el.value, 'gi');\n                const termHTML = term.replace(regex, `<span class=\"bg-lexicblue-100 text-gray-900\">${el.value}</span>`)\n                return `<li id=\"${index}\" class=\"text-sm break-words text-gray-200 cursor-pointer hover:text-gray-900 hover:bg-lexicblue-300 p-1\" data-key=\"${term}\">${termHTML}</li>`\n            })\n        }\n        return [];\n    }\n\n    // const searchKeyboardEvents = (e) => {\n    //     if (e.type === 'keyup') {\n    //         if(searchResultsContainer){\n    //             searchResultsContainer.innerHTML = getTermsHtmlArray(e).join('');\n    //             if (searchResultsContainer.classList.contains('hidden') && !isSubmit) {\n    //                 searchResultsContainer.classList.remove('hidden');\n    //             }\n    //         }\n    //         resultsArray = getTermsHtmlArray(e);\n    //\n    //         // Ghosting\n    //         const matchBeginningRegex = new RegExp(`^${e.currentTarget.value}`, 'g')\n    //         if (e.keyCode !== 13) {\n    //             if (searchResultsContainer && searchResultsContainer.firstElementChild && searchResultsContainer.firstElementChild.dataset.key) {\n    //                 if (searchResultsContainer.firstElementChild.dataset.key.match(matchBeginningRegex)) {\n    //                     searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n    //                 } else {\n    //                     searchInputGhost.value = '';\n    //                 }\n    //             } else {\n    //                 if(searchInputGhost) searchInputGhost.value = '';\n    //             }\n    //         }\n    //         if (e.currentTarget.value === '' || (searchResultsContainer && searchResultsContainer.children.length === 0)) {\n    //             searchResultsContainer.classList.add('hidden');\n    //             count = 0;\n    //             if(searchInputGhost) searchInputGhost.value = '';\n    //         }\n    //         // reset when text is inserted.\n    //         if (e.keyCode !== 39 && e.keyCode !== 38 && e.keyCode !== 40 && e.keyCode !== 13) {\n    //             count = 0;\n    //         }\n    //         // left arrow\n    //         if (e.keyCode === 39) {\n    //             if(searchInputGhost && searchResultsContainer){\n    //                 searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n    //                 e.currentTarget.value = searchResultsContainer.firstElementChild.dataset.key;\n    //             }\n    //         }\n    //\n    //         // up arrow\n    //         if (e.keyCode === 38) {\n    //             if (count >= 0) {\n    //                 count = (count === 0) ? count = 0 : count - 1;\n    //                 if (searchResultsContainer && searchResultsContainer.children[count]) {\n    //                     searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n    //                     searchResultsContainer.children[count].classList.add('text-gray-900');\n    //                 }\n    //             }\n    //         }\n    //\n    //         // down arrow\n    //         if (e.keyCode === 40) {\n    //             const listMaxLength = searchResultsContainer && searchResultsContainer.children.length - 1\n    //             if (count <= listMaxLength) {\n    //                 if (!isInitialValue) {\n    //                     count = (count === listMaxLength) ? listMaxLength : count + 1\n    //                 }\n    //                 if (searchResultsContainer && searchResultsContainer.children[count]) {\n    //                     searchResultsContainer.children[count].classList.add('bg-lexicblue-300');\n    //                     searchResultsContainer.children[count].classList.add('text-gray-900');\n    //                     isInitialValue = false;\n    //                 }\n    //             }\n    //         }\n    //\n    //         //esc\n    //         if (e.keyCode === 27) {\n    //             searchResultsContainer && searchResultsContainer.classList.add('hidden');\n    //         }\n    //     }\n    //     if (e.type === 'submit') {\n    //         isSubmit = true;\n    //         searchResultsContainer.innerHTML = resultsArray.join('');\n    //         if (searchInput && searchInputGhost && searchResultsContainer && searchResultsContainer.children.length > 0) {\n    //             searchInputGhost.value = searchResultsContainer.children[count].dataset.key\n    //             searchInputGhost.style.color= 'transparent'\n    //             searchInput.value = searchResultsContainer.children[count].dataset.key\n    //         }\n    //\n    //         if (searchInputGhost && searchResultsContainer && searchResultsContainer.length === 1) {\n    //             searchInputGhost.value = searchResultsContainer.firstElementChild.dataset.key;\n    //         }\n    //\n    //         if (searchResultsContainer && searchResultsContainer.children.length === 0) {\n    //             e.preventDefault();\n    //         }\n    //\n    //         searchResultsContainer && searchResultsContainer.classList.add('hidden');\n    //     }\n    // }\n    // const searchMouseEvents = (e) => {\n    //     if (e.type === 'click') {\n    //         if (e.target.tagName === 'LI' && searchInputGhost) {\n    //             searchInputGhost.value = e.target.dataset.key;\n    //             searchForm && searchForm.submit();\n    //         }\n    //     }\n    // }\n    // const displayMatches = (e) => {\n    //     searchKeyboardEvents(e)\n    //     searchMouseEvents(e);\n    // }\n    // const searchEvents = () => {\n    //     searchInput && searchInput.addEventListener('keyup', displayMatches)\n    //     searchResultsContainer && searchResultsContainer.addEventListener('click', displayMatches)\n    //     searchResultsContainer && searchResultsContainer.addEventListener('mouseover', displayMatches);\n    //     searchForm && searchForm.addEventListener('submit', displayMatches)\n    //     window.addEventListener('click', (e) => {\n    //         if (e.target.closest !== searchForm && searchResultsContainer) {\n    //             searchResultsContainer.classList.add('hidden');\n    //         }\n    //     })\n    //     window.addEventListener('keydown', (e) => {\n    //\n    //         if (e.key === 'f' && e.ctrlKey && e.metaKey) {\n    //             searchInput.focus();\n    //         }\n    //     })\n    // }\n\n\n\n    return (\n        <div>\n            <label htmlFor=\"price\" className=\"block text-sm font-medium text-slate-400\">\n                Abbreviations list\n            </label>\n            <div className=\"relative mt-1 rounded-md shadow-sm\">\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    id=\"price\"\n                    className=\"block w-full rounded-md border-gray-300 pl-7 pr-12 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                    placeholder=\"Start typing and abbreviation..\"\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\n                    <label htmlFor=\"currency\" className=\"sr-only\">\n                        Abbreviation Dictionary\n                    </label>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAEA,eAAe,SAASA,KAAK,GAAG;EAI5B,MAAMC,WAAW,GAAG,CAACC,KAAY,EAAEC,UAAa,KAAK;IACjD,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAACH,KAAK,EAAE,IAAI,CAAC;IACrC,MAAMI,UAAmB,GAAG,EAAE;IAC1B,CAACH,UAAU,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACxB,KAAK,IAAI,CAACC,IAAI,EAAEC,GAAG,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;QACzCF,UAAU,CAACO,IAAI,CAACJ,IAAI,CAAC;MACzB;IACJ,CAAC,CAAC;IACN,OAAOH,UAAU,CAACQ,MAAM,CAAEC,GAAU,IAAKA,GAAG,CAACC,KAAK,CAACZ,KAAK,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMa,iBAAiB,GAAG,CAACC,CAAe,EAAEf,UAAa,KAAK;IAC1D,MAAMgB,EAAmB,GAAGD,CAAC,CAACE,aAAa;IAC3C,IAAGD,EAAE,EAAC;MACF,MAAME,UAAU,GAAGpB,WAAW,CAACkB,EAAE,CAACG,KAAK,EAAEnB,UAAU,CAAC;MACpD,OAAOkB,UAAU,CAACE,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,KAAK;QACnC,MAAMpB,KAAK,GAAG,IAAIC,MAAM,CAACc,EAAE,CAACG,KAAK,EAAE,IAAI,CAAC;QACxC,MAAMG,QAAQ,GAAGhB,IAAI,CAACiB,OAAO,CAACtB,KAAK,EAAG,gDAA+Ce,EAAE,CAACG,KAAM,SAAQ,CAAC;QACvG,OAAQ,WAAUE,KAAM,uHAAsHf,IAAK,KAAIgB,QAAS,OAAM;MAC1K,CAAC,CAAC;IACN;IACA,OAAO,EAAE;EACboBACI;IAAA,wBACI;MAAO,OAAO,EAAC,OAAO;MAAC,SAAS,EAAC,0CAA0C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnE,eACR;MAAK,SAAS,EAAC,oCAAoC;MAAA,wBAC/C;QACI,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,SAAS,EAAC,6GAA6G;QACvH,WAAW,EAAC;MAAiC;QAAA;QAAA;QAAA;MAAA,QAC/C,eACF;QAAK,SAAS,EAAC,8CAA8C;QAAA,uBACzD;UAAO,OAAO,EAAC,UAAU;UAAC,SAAS,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAErC;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,KA5KuBzB,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}