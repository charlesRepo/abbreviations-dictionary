{"ast":null,"code":"var _jsxFileName = \"/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport dictionary from \"../dictionary.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MatchesContainer(_ref) {\n  _s();\n  let {\n    query,\n    count,\n    setCount\n  } = _ref;\n  const findMatches = query => {\n    const regex = new RegExp(query, 'gi');\n    const termsArray = [];\n    [dictionary].forEach(obj => {\n      Object.keys(obj).forEach(term => termsArray.push(term));\n    });\n    return termsArray.filter(val => val.match(regex));\n  };\n  let tempArr = [];\n  useEffect(() => {\n    count >= tempArr.length - 1 && setCount(tempArr.length - 1);\n    count <= 0 && setCount(0);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: query && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"border-slate-600 border-2 rounded\",\n      children: findMatches(query).map((term, index, arr) => {\n        const regex = new RegExp(query, 'gi');\n        const itemValue = term.replace(regex, query);\n        tempArr = arr;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${count === index ? 'bg-slate-400 text-slate-900' : ''} text-sm break-words text-slate-500 cursor-pointer hover:text-slate-200 hover:bg-slate-600 p-1`,\n          \"data-key\": \"${term}\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: itemValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this)\n  }, void 0, false);\n}\n_s(MatchesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MatchesContainer;\nvar _c;\n$RefreshReg$(_c, \"MatchesContainer\");","map":{"version":3,"names":["useEffect","dictionary","MatchesContainer","query","count","setCount","findMatches","regex","RegExp","termsArray","forEach","obj","Object","keys","term","push","filter","val","match","tempArr","length","map","index","arr","itemValue","replace"],"sources":["/Users/charles.hanna/Development/useful-chrome-extensions/abbreviations-dictionary/src/Components/MatchesContainer.tsx"],"sourcesContent":["import {useEffect} from \"react\";\nimport dictionary from \"../dictionary.json\";\n\ninterface Props{\n    query: string;\n    count: number;\n    setCount: (count: number) => void\n}\n\nexport default function MatchesContainer({query, count, setCount}:Props){\n    const findMatches = (query:string) => {\n        const regex = new RegExp(query, 'gi');\n        const termsArray:string[] = [];\n        [dictionary].forEach(obj => {\n            Object.keys(obj).forEach((term) => termsArray.push(term));\n        })\n        return termsArray.filter((val:string) => val.match(regex))\n    }\n\n    let tempArr = [];\n    useEffect(() => {\n        count >= tempArr.length -1 && setCount(tempArr.length -1)\n        count <= 0 && setCount(0);\n\n    })\n\n    return (\n        <>\n            {query && (<ul className=\"border-slate-600 border-2 rounded\" >\n                {findMatches(query).map((term, index, arr) => {\n                    const regex = new RegExp(query, 'gi');\n                    const itemValue =  term.replace(regex, query);\n                    tempArr = arr;\n                    return (\n                        <li key={index}\n                            className={`${count === index ? 'bg-slate-400 text-slate-900':''} text-sm break-words text-slate-500 cursor-pointer hover:text-slate-200 hover:bg-slate-600 p-1`}\n                            data-key=\"${term}\">\n                            <span>{itemValue}</span>\n                        </li>\n                    )\n                })}\n            </ul>)}\n        </>)\n\n}\n"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAAA;AAQ5C,eAAe,SAASC,gBAAgB,OAAgC;EAAA;EAAA,IAA/B;IAACC,KAAK;IAAEC,KAAK;IAAEC;EAAc,CAAC;EACnE,MAAMC,WAAW,GAAIH,KAAY,IAAK;IAClC,MAAMI,KAAK,GAAG,IAAIC,MAAM,CAACL,KAAK,EAAE,IAAI,CAAC;IACrC,MAAMM,UAAmB,GAAG,EAAE;IAC9B,CAACR,UAAU,CAAC,CAACS,OAAO,CAACC,GAAG,IAAI;MACxBC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAACD,OAAO,CAAEI,IAAI,IAAKL,UAAU,CAACM,IAAI,CAACD,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC;IACF,OAAOL,UAAU,CAACO,MAAM,CAAEC,GAAU,IAAKA,GAAG,CAACC,KAAK,CAACX,KAAK,CAAC,CAAC;EAC9D,CAAC;EAED,IAAIY,OAAO,GAAG,EAAE;EAChBnB,SAAS,CAAC,MAAM;IACZI,KAAK,IAAIe,OAAO,CAACC,MAAM,GAAE,CAAC,IAAIf,QAAQ,CAACc,OAAO,CAACC,MAAM,GAAE,CAAC,CAAC;IACzDhB,KAAK,IAAI,CAAC,IAAIC,QAAQ,CAAC,CAAC,CAAC;EAE7B,CAAC,CAAC;EAEF,oBACI;IAAA,UACKF,KAAK,iBAAK;MAAI,SAAS,EAAC,mCAAmC;MAAA,UACvDG,WAAW,CAACH,KAAK,CAAC,CAACkB,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,EAAEC,GAAG,KAAK;QAC1C,MAAMhB,KAAK,GAAG,IAAIC,MAAM,CAACL,KAAK,EAAE,IAAI,CAAC;QACrC,MAAMqB,SAAS,GAAIV,IAAI,CAACW,OAAO,CAAClB,KAAK,EAAEJ,KAAK,CAAC;QAC7CgB,OAAO,GAAGI,GAAG;QACb,oBACI;UACI,SAAS,EAAG,GAAEnB,KAAK,KAAKkB,KAAK,GAAG,6BAA6B,GAAC,EAAG,gGAAgG;UACjK,YAAS,SAAS;UAAA,uBAClB;YAAA,UAAOE;UAAS;YAAA;YAAA;YAAA;UAAA;QAAQ,GAHnBF,KAAK;UAAA;UAAA;UAAA;QAAA,QAIT;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACA,iBACP;AAEX;AAAC,GAnCuBpB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}